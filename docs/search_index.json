[["index.html", "Harvesting Rental Data and Assessing Rental Crisis in Sydney Chapter 1 Welcome 1.1 Learn all about Bookdown", " Harvesting Rental Data and Assessing Rental Crisis in Sydney Dr.Â Chinh Ho 2024-02-27 Chapter 1 Welcome hi Its possible to create beautiful books for free using RStudios R Markdown and Yihui Xies bookdown and hosting them on Github. This is pretty new and incredibly cool. It is a really powerful way to communicate science using the same reproducible workflow you use for your analyses and collaborations. This tutorial borrows heavily from a lot of great tutorials and resources you should check out too  there are links throughout. It also parallels a previous tutorial Making free websites with RStudios R Markdown. The best way to learn is to follow along with your own laptop, but all are welcome. Well spend half the time with the tutorial and half the time for you to work on your own website and get help. If you bring your laptop please do this beforehand: install RStudio create a GitHub account (advice) set up your computer to talk to GitHub have RStudio linked directly (highly recommended) (instructions sections 8-14) or install the Desktop App or be familiar with git commands for the command line (tutorial) Examples: We have been using bookdown for the Ocean Health Index: ohi-science.org/data-science-training and Openscapes: openscapes.org/series. And R Markdown is much more than books and websites  heres a one-minute video about R Markdown to get you excited. 1.1 Learn all about Bookdown The best way to learn more about bookdown is from Yihui Xie himself. You can read his book bookdown: Authoring Books and Technical Documents with R Markdown or watch his webinar introducing bookdown. "],["setup.html", "Chapter 2 Setting up Bookdown 2.1 Get bookdown-tutorial going on your local computer 2.2 Create your awesome-book GitHub repo 2.3 Turn bookdown-tutorial into awesome-book 2.4 Publish awesome-book 2.5 Moving forward 2.6 This is to test if it works", " Chapter 2 Setting up Bookdown The bookdown package and book is definitely the best way to get started. However, in practice I always find myself copying an existing, working book and modifying it instead of starting from scratch. So this tutorial is going to have you do that as well, using this book as the one you copy from. [more setup here] You will have to name your books repository. To differentiate your books repo name from this bookdown-tutorial repo, here well call your book awesome-book but you should consistently name it what you want to name it. 2.1 Get bookdown-tutorial going on your local computer Go to https://github.com/jules32/bookdown-tutorial Click the green clone or download button and DOWNLOAD ZIP. Locally on your computer, unzip the folder, save it in a reasonable place Rename 2 things from bookdown-tutorial to awesome-book. You can do this in the finder/windows explorer: the folder itself (that you just unzipped) the .Rproj file Double-click the .Rproj file to launch RStudio Install packages and restart install.packages(\"bookdown\") install.packages(\"usethis\") Use the menu item Session &gt; Restart R Click on the Build tab in the top right pane Click on Build Book! Nice job! Now lets make it yours, and connect it to GitHub. 2.2 Create your awesome-book GitHub repo Go to your GitHub account: github.com/username Click on Repositories, and the green button New to create a new repo Name this new repo awesome-book DO NOT initialize this repo with a README Click the green create repository button  this will take you to your new repo Click the tiny clone or download button near the top and COPY URL 2.3 Turn bookdown-tutorial into awesome-book The following is from Jenny Bryans Happy Git With R Go back to RStudio, to your awesome-book project In the Console, type usethis::use_git() and say Yes to the two prompts. This will restart R and give you a new Git tab in the upper right pane. Now, click on the Terminal tab next to the Console tab. Type git remote add origin &lt;paste your copied awesome-book github url here&gt; Type git push --set-upstream origin master 2.4 Publish awesome-book Last steps! Go back to github.com/username/awesome-book and refresh  our files should be there! But we want it to be a book published as https://username.github.io/awesome-book. Click Settings Scroll down to GitHub Settings Change the Source pulldown from None to master branch /docs folder It should say Your site is ready to be published at https://username.github.io/awesome-book/  click the link to see! Now, youre set  you just need to write your book. 2.5 Moving forward As you write your .Rmd files, build the book and commit all files, including the docs/ folder, and your published book will be updated! 2.6 This is to test if it works As we start coding, the book will be updated after commit # source(&quot;./get_rent_data.R&quot;) # get_rent_data() "],["parsing-data.html", "Chapter 3 Parsing data", " Chapter 3 Parsing data The first thing we have to do is to combine the files downloaded from the website. We can then parse the data to put it in the format ready for analysis if(!require(tidyverse)){ install.packages(&quot;tidyverse&quot;)} # check and install &#39;tidyverse&#39; if needed ## Loading required package: tidyverse ## Warning: replacing previous import &#39;lifecycle::last_warnings&#39; by ## &#39;rlang::last_warnings&#39; when loading &#39;pillar&#39; ## Warning: replacing previous import &#39;lifecycle::last_warnings&#39; by ## &#39;rlang::last_warnings&#39; when loading &#39;tibble&#39; ## Warning: replacing previous import &#39;lifecycle::last_warnings&#39; by ## &#39;rlang::last_warnings&#39; when loading &#39;hms&#39; ## -- Attaching packages --------------------------------------- tidyverse 1.3.1 -- ## v ggplot2 3.3.5 v purrr 0.3.4 ## v tibble 3.1.4 v dplyr 1.0.7 ## v tidyr 1.1.3 v stringr 1.4.0 ## v readr 2.0.1 v forcats 0.5.1 ## -- Conflicts ------------------------------------------ tidyverse_conflicts() -- ## x dplyr::filter() masks stats::filter() ## x dplyr::lag() masks stats::lag() library(tidyverse) # load required package sfiles &lt;- list.files(&quot;./RentData&quot;, full.names = TRUE) # list all files colnm &lt;- c(&quot;postcode&quot;, &quot;dwt&quot;, &quot;beds&quot;, &quot;wklyrent_q1&quot;,&quot;wklyrent_q2&quot;,&quot;wklyrent_q3&quot;, &quot;newbonds&quot;,&quot;bondnum&quot;, &quot;rentchgqrt&quot;,&quot;rentchgann&quot;, &quot;bondchgqrt&quot;,&quot;bondchgann&quot;) # loop through each file to read and bind them together res &lt;- temp &lt;- NULL for (i in 1: length(sfiles)){ temp &lt;- readxl::read_xlsx(sfiles[i], sheet = 3, col_names = colnm, skip = 9) %&gt;% mutate(period = unlist(sfiles[i])) # add the file name to know which quarter res &lt;- bind_rows(res, temp) } rm(temp) # remove temp file which is no longer needed. Check the data structure and data types using the head function. We can see that many fields have a wrong data type (character instead of double). We will change them before cleaning res %&gt;% head() ## # A tibble: 6 x 13 ## postcode dwt beds wklyrent_q1 wklyrent_q2 wklyrent_q3 newbonds bondnum ## &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; ## 1 1790 Flat/Unit 2 Bed~ - - - - - ## 2 1825 Total Total - - - - - ## 3 1825 Total 2 Bed~ - - - - - ## 4 1825 Other Total - - - - - ## 5 1825 Other 2 Bed~ - - - - - ## 6 1860 Total Total - - - - - ## # ... with 5 more variables: rentchgqrt &lt;chr&gt;, rentchgann &lt;chr&gt;, ## # bondchgqrt &lt;chr&gt;, bondchgann &lt;chr&gt;, period &lt;chr&gt; Use mutate across to convert the data type for multiple fields at once. We convert from character to numberic type. We then use pattern matching to part the file name to get the quarter and year the data represents. res &lt;- res %&gt;% mutate(across(wklyrent_q1:bondchgann, ~ as.numeric(.))) ## Warning in mask$eval_all_mutate(quo): NAs introduced by coercion ## Warning in mask$eval_all_mutate(quo): NAs introduced by coercion ## Warning in mask$eval_all_mutate(quo): NAs introduced by coercion ## Warning in mask$eval_all_mutate(quo): NAs introduced by coercion ## Warning in mask$eval_all_mutate(quo): NAs introduced by coercion ## Warning in mask$eval_all_mutate(quo): NAs introduced by coercion ## Warning in mask$eval_all_mutate(quo): NAs introduced by coercion ## Warning in mask$eval_all_mutate(quo): NAs introduced by coercion ## Warning in mask$eval_all_mutate(quo): NAs introduced by coercion res &lt;- res %&gt;% mutate(period = gsub(pattern = &quot;./Issue-\\\\d{3}-\\\\d{4}&quot;, &quot;&quot;, period)) %&gt;% mutate(period = gsub(pattern = &quot;-?./?Rent-tables-&quot;, &quot;&quot;, ignore.case = T, period)) %&gt;% mutate(period = gsub(pattern = &quot;-Quarter&quot;, &quot;&quot;, ignore.case = T, period)) %&gt;% mutate(period = gsub(pattern = &quot;\\\\.xlsx$&quot;, &quot;&quot;, period)) %&gt;% separate(period, into = c(&quot;quarter&quot;, &quot;year&quot;), sep = &quot;-&quot;) %&gt;% mutate(quarter = gsub(&quot;./RentDat&quot;, &quot;&quot;, quarter)) ## Warning: Expected 2 pieces. Additional pieces discarded in 65551 rows [32814, ## 32815, 32816, 32817, 32818, 32819, 32820, 32821, 32822, 32823, 32824, 32825, ## 32826, 32827, 32828, 32829, 32830, 32831, 32832, 32833, ...]. res %&gt;% tail() ## # A tibble: 6 x 14 ## postcode dwt beds wklyrent_q1 wklyrent_q2 wklyrent_q3 newbonds bondnum ## &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 4390 House Total NA NA NA NA NA ## 2 4390 House 4 or more~ NA NA NA NA NA ## 3 5341 Total Total NA NA NA NA NA ## 4 5341 Total Not Speci~ NA NA NA NA NA ## 5 5341 Other Total NA NA NA NA NA ## 6 5341 Other Not Speci~ NA NA NA NA NA ## # ... with 6 more variables: rentchgqrt &lt;dbl&gt;, rentchgann &lt;dbl&gt;, ## # bondchgqrt &lt;dbl&gt;, bondchgann &lt;dbl&gt;, quarter &lt;chr&gt;, year &lt;chr&gt; Many postcodes have no data for weekly rental cost due either to no new rent contracts or small sample size. We can remove these from the dataset. res &lt;- res %&gt;% filter(rowSums(is.na(.)) &lt; 8) %&gt;% filter(dwt != &quot;Total&quot; &amp; beds != &quot;Total&quot;) selacc &lt;- c(&quot;1 Bedroom&quot;, &quot;2 Bedrooms&quot;, &quot;3 Bedrooms&quot;, &quot;4 or more Bedrooms&quot;) res %&gt;% # head() %&gt;% select(postcode, quarter, year, dwt, beds, wklyrent_q2) %&gt;% filter(beds %in% selacc) %&gt;% mutate(month = substr(quarter, 1,3)) %&gt;% mutate(dt2 = paste0(year,&quot;-&quot;, quarter, &quot;-01&quot;)) %&gt;% mutate(qrt = paste0(month,&quot;-&quot;,substr(year,3,4))) %&gt;% mutate(dt = as.Date(dt2, format = &quot;%Y-%B-%d&quot;)) %&gt;% filter(!is.na(wklyrent_q2)) %&gt;% select(postcode, dt, qrt, dwt, beds, wklyrent_q2) %&gt;% arrange(dt) %&gt;% pivot_wider(id_cols = c(&quot;postcode&quot;, &quot;dwt&quot;, &quot;beds&quot;), names_from = &quot;qrt&quot;, values_from = &quot;wklyrent_q2&quot;) ## # A tibble: 2,229 x 21 ## postcode dwt beds `Mar-19` `Jun-19` `Sep-19` `Dec-19` `Jun-20` `Sep-20` ## &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 2000 House 2 Be~ 850 NA NA NA NA 700 ## 2 2000 Other 1 Be~ 575 605 605 589 589 499 ## 3 2000 Other 2 Be~ 850 NA 950 NA NA 715 ## 4 2000 Flat/Unit 1 Be~ 660 670 650 650 525 500 ## 5 2000 Flat/Unit 2 Be~ 940 915 900 880 750 705 ## 6 2000 Flat/Unit 3 Be~ 1300 1380 1275 1400 1025 970 ## 7 2007 Other 1 Be~ 419 345 409 395 NA 485 ## 8 2007 Flat/Unit 1 Be~ 550 560 510 555 450 450 ## 9 2007 Flat/Unit 2 Be~ 750 780 670 890 600 600 ## 10 2008 House 2 Be~ 730 730 710 NA 680 610 ## # ... with 2,219 more rows, and 12 more variables: dec-21 &lt;dbl&gt;, Mar-22 &lt;dbl&gt;, ## # Jun-22 &lt;dbl&gt;, Sep-22 &lt;dbl&gt;, Dec-22 &lt;dbl&gt;, Mar-23 &lt;dbl&gt;, Jun-23 &lt;dbl&gt;, ## # Sep-23 &lt;dbl&gt;, a/I-4D &lt;dbl&gt;, a/I-5M &lt;dbl&gt;, a/I-6J &lt;dbl&gt;, a/i-7s &lt;dbl&gt; "],["write.html", "Chapter 4 Writing in Bookdown", " Chapter 4 Writing in Bookdown Coming soon: Adding chapters Citations "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
